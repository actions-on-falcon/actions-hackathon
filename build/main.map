{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"actions-on-google\"","webpack:///external \"basic-auth-connect\"","webpack:///external \"body-parser\"","webpack:///external \"dotenv\"","webpack:///external \"express\"","webpack:///external \"heroku-self-ping\""],"names":["dotenv","config","selfPing","server","express","app","dialogflow","debug","PORT","HTTP_USER","HTTP_PASS","process","env","use","basicAuth","bodyParser","json","listen"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEAA,6CAAM,CAACC,MAAP;AAEAC,uDAAQ,CAAC,0CAAD,CAAR;AAEA,MAAMC,MAAM,GAAGC,8CAAO,EAAtB;AACA,MAAMC,GAAG,GAAGC,oEAAU,CAAC;AAACC,OAAK,EAAE;AAAR,CAAD,CAAtB;AAEA,MAAM;AAACC,MAAI,GAAG,IAAR;AAAcC,WAAd;AAAyBC;AAAzB,IAAsCC,OAAO,CAACC,GAApD;AAEAT,MAAM,CAACU,GAAP,CAAWC,yDAAS,CAACL,SAAD,EAAYC,SAAZ,CAApB;AAEAP,MAAM,CAACU,GAAP,CAAWE,kDAAU,CAACC,IAAX,EAAX;AACAb,MAAM,CAACU,GAAP,CAAWR,GAAX;AAEAF,MAAM,CAACc,MAAP,CAAcT,IAAd,E;;;;;;;;;;;;;;;;;;;;;;;ACtBA,8C;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,wC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,oC;;;;;;;;;;;ACAA,6C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import {dialogflow} from 'actions-on-google'\nimport bodyParser from 'body-parser'\nimport express from 'express'\nimport basicAuth from 'basic-auth-connect'\nimport dotenv from 'dotenv'\n\nimport selfPing from 'heroku-self-ping'\n\ndotenv.config()\n\nselfPing('https://actions-on-falcon.herokuapp.com/')\n\nconst server = express()\nconst app = dialogflow({debug: false})\n\nconst {PORT = 3000, HTTP_USER, HTTP_PASS} = process.env\n\nserver.use(basicAuth(HTTP_USER, HTTP_PASS))\n\nserver.use(bodyParser.json())\nserver.use(app)\n\nserver.listen(PORT)\n","module.exports = require(\"actions-on-google\");","module.exports = require(\"basic-auth-connect\");","module.exports = require(\"body-parser\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"heroku-self-ping\");"],"sourceRoot":""}